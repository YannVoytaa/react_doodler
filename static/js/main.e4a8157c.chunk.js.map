{"version":3,"sources":["logo.svg","Floor.js","Doodler.js","Grid.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Floor","className","style","top","this","props","y","left","x","React","Component","Doodler","state","right","t","trnsform","setState","transform","movePlatforms","jumping","interval","result","window","onkeyup","e","key","onkeydown","Grid","console","log","prev","tab","Math","floor","random","push","pos","forEach","item","i","tak","platform","takx","taky","doodler","doodler_speed","acc","length","jump","vel","clearInterval","HEIGHT","colide","FLOOR_W","DOODLER_W","setInterval","control","floors","map","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e4a8157c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\n\nclass Floor extends React.Component{\n  render(){\n    return(\n      <div className='floor' style={{top:`${this.props.y}px`,left:`${this.props.x}px`}}>\n      </div>\n    )\n  }\n}\n\n//{this.props.x} {this.props.y}\nexport default Floor\n","import React from 'react'\n\nclass Doodler extends React.Component{\n  constructor(){\n    super()\n    this.state={\n      'left':false,\n      'right':false,\n      'transform':'scaleX(-1)'\n    }\n  }\n  render(){\n    if(this.props.left===this.state.left&&this.props.right===this.state.right){}\n    else {\n      let t=''\n      if(this.props.right===false&&this.props.left===false)t=this.state.trnsform\n      else t=`scaleX(${this.props.left?-1:1})`\n      this.setState({'right':this.props.right,'left':this.props.left,'transform':`${t}`})\n    }\n    return(\n      <div className='doodler' style={{top:`${this.props.y}px`,left:`${this.props.x}px`,transform:`${this.state.transform}`}}>\n      </div>\n\n    )\n  }\n\n\n}\n\nexport default Doodler\n","import React from 'react'\nimport Floor from './Floor'\nimport Doodler from './Doodler'\nconst WIDTH=400, HEIGHT=800, FLOOR_W=80,FLOOR_H=15,DOODLER_W=64,DOODLER_H=64\nlet movePlatforms=false,left=false,right=false,jumping=false,interval=null,result=0\nwindow.onkeyup=function(e){\n  if(e.key==='ArrowLeft')left=false\n  if(e.key==='ArrowRight')right=false\n}\nwindow.onkeydown=function(e){\n  if(e.key==='ArrowLeft')left=true\n  if(e.key==='ArrowRight')right=true\n}\nclass Grid extends React.Component{\n  constructor(){\n    super()\n    this.state={\n      'pos':[],\n      'doodler':{},\n      'doodler_speed':{'vel':0,'acc':10}\n    }\n    /*setInterval(()=>{\n      this.setState((prev)=>{'doodler':{'x':prev.doodler.x,'y':prev.doodler.y+prev.doodler_speed.acc},'doodler_speed':{'vel':prev.doodler_speed.vel+prev.doodler_speed.acc,'acc',prev.doodler_speed.acc+1}})\n    },1000)*/\n  }\n  jump(){\n    console.log(++result)\n    this.setState(prev=>{\n      let tab=[]\n      let x=Math.floor(Math.random()*(WIDTH-FLOOR_W))\n      let y=20;\n      tab.push({'x':x,'y':y})\n      prev.pos.forEach((item, i) => {\n        tab.push({'x':item.x,'y':item.y})\n      });\n      movePlatforms=true\n      //console.log(tab)\n      return {'pos':tab}\n    })\n  }\n  colide(){\n    let tak=false\n    this.state.pos.forEach((platform, i) => {\n      let takx=false\n      let taky=false\n      let doodler=this.state.doodler\n      if(platform.x<doodler.x&&doodler.x<platform.x+FLOOR_W){takx=true}\n      if(platform.x<doodler.x+DOODLER_W&&doodler.x+DOODLER_W<platform.x+FLOOR_W){takx=true}\n      if(platform.y<=doodler.y+DOODLER_H&&doodler.y+DOODLER_H<=platform.y+FLOOR_H)taky=true\n      if(this.state.doodler_speed.acc<0)takx=false\n      if(!tak)tak=takx&&taky\n      if(tak&&i!=this.state.pos.length-1&&jumping===false){\n        jumping=true\n        this.jump()\n      }\n    });\n    return tak\n  }\n\n\n  control(){\n    //1console.log(this.state.doodler_speed.acc)\n    this.setState(prev=>({\n      'doodler':{'x':prev.doodler.x+(right-left)*10,'y':prev.doodler.y+prev.doodler_speed.acc},\n      'doodler_speed':{'vel':prev.doodler_speed.vel+prev.doodler_speed.acc,'acc':prev.doodler_speed.acc+1}\n    }))\n    if(movePlatforms){\n      let gap=7\n      this.setState(prev=>{\n        let tab=[]\n        prev.pos.forEach((item, i) => {\n          if(item.y+gap>=HEIGHT){\n            movePlatforms=false\n            jumping=false\n          }\n          else tab.push({'x':item.x,'y':item.y+gap})\n        });\n        return {'pos':tab,'doodler':{'x':prev.doodler.x,'y':prev.doodler.y+gap}}\n      })\n    }\n    if(this.state.doodler.y+DOODLER_H>HEIGHT){\n      clearInterval(interval)\n      this.setState((prev)=>({'doodler':{'x':prev.doodler.x,'y':HEIGHT-DOODLER_H}}))\n    }\n    if(this.colide()){\n      this.setState((prev)=>{\n        return {'doodler_speed':{'acc':-17,'vel':-prev.doodler_speed.vel}}\n      })\n    }\n  }\n\n\n  componentDidMount(){\n    let tab=[]\n    for(let i=1;i<=5;i++){\n      let x=Math.floor(Math.random()*(WIDTH-FLOOR_W))\n      let y=130*i+20;\n      tab.push({'x':x,'y':y})\n    }\n    let doodler={'x':tab[tab.length-1].x+FLOOR_W/2-DOODLER_W/2,'y':tab[tab.length-1].y-170}\n    this.setState({'pos':tab,'doodler':doodler})\n    interval=setInterval(()=>{\n      this.control()\n    },50)\n  }\n  render(){\n    const floors=this.state.pos.map(item => {\n      return <Floor x={item.x} y={item.y} />\n    });\n    return(\n      <div className='grid'>\n        {floors}\n        <Doodler left={left} right={right} x={this.state.doodler.x} y={this.state.doodler.y} />\n      </div>\n    )\n  }\n}\n\n\nexport default Grid\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Grid from './Grid'\nfunction App() {\n  return (\n    <Grid />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}